<Project>
  <Name>iveeCrest</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Class Diagram</Name>
    <Language>Java</Language>
    <Entities>
      <Entity type="Class">
        <Name>Client</Name>
        <Access>Public</Access>
        <Location left="455" top="28" />
        <Size width="487" height="468" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected ICache cache</Member>
        <Member type="Field">protected string rootEndpointUrl</Member>
        <Member type="Field">protected string clientId</Member>
        <Member type="Field">protected string clientSecret</Member>
        <Member type="Field">protected string charRefreshToken</Member>
        <Member type="Field">protected string charAccessToken</Member>
        <Member type="Field">protected int charAccessTokenExpiry</Member>
        <Member type="Field">protected CurlWrapper cw</Member>
        <Member type="Field">protected stdClass rootEndpoint</Member>
        <Member type="Method">public Client __construct(string rootEndpoint, string clientId, string clientSecret, string clientUserAgent, string charRefreshToken)</Member>
        <Member type="Method">public string getRootEndpointUrl()</Member>
        <Member type="Method">public ICache getCache()</Member>
        <Member type="Method">public array getBasicAuthHeader()</Member>
        <Member type="Method">public array getBearerAuthHeader()</Member>
        <Member type="Method">public array getRefreshTokenPostFields()</Member>
        <Member type="Method">public string getAccessToken()</Member>
        <Member type="Method">public stdClass getRootEndpoint()</Member>
        <Member type="Method">public stdClass getOptions()</Member>
        <Member type="Method">public Response getEndpointResponse(string url, bool auth, string accept)</Member>
        <Member type="Method">public stdClass getEndpoint(string url, bool auth, string accept)</Member>
        <Member type="Method">public array gather(string endpointHref, callable indexFunc, callable elementFunc, string accept)</Member>
        <Member type="Method">public array gatherCached(string endpointHref, callable indexFunc, callable elementFunc, string accept, int ttl, string subCommandKey)</Member>
        <Member type="Method">public void asyncGetMultiEndpointResponses(array hrefs, callable callback, callable errCallback, string accept, bool cache)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CurlWrapper</Name>
        <Access>Public</Access>
        <Location left="1013" top="28" />
        <Size width="366" height="264" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected ICache cache</Member>
        <Member type="Field">protected string userAgent</Member>
        <Member type="Field">protected curl_handle ch</Member>
        <Member type="Method">public CurlWrapper __construct(string userAgent, string refreshToken)</Member>
        <Member type="Method">public void __destruct()</Member>
        <Member type="Method">public Response post(string uri, array header, array field)</Member>
        <Member type="Method">public Response get(string uri, array header)</Member>
        <Member type="Method">public Response options(string uri)</Member>
        <Member type="Method">protected void doRequest(array curlOptArray, Response response)</Member>
        <Member type="Method">public void asyncMultiGet(array hrefs, array header, callable getAuthHeader, callable callback, callable errCallback, bool cache)</Member>
        <Member type="Method">protected Response addHandleToMulti(curl_multi multiHandle, string href, array stdOptions, callable getAuthHeader, array header)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>ICache</Name>
        <Access>Public</Access>
        <Location left="1056" top="348" />
        <Size width="191" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool setItem(ICacheable item)</Member>
        <Member type="Method">ICacheable getItem(string key)</Member>
        <Member type="Method">bool deleteItem(string key)</Member>
        <Member type="Method">bool deleteMulti(array keys)</Member>
        <Member type="Method">void flushCache()</Member>
        <Member type="Method">int getHits()</Member>
      </Entity>
      <Entity type="Interface">
        <Name>ICacheable</Name>
        <Access>Public</Access>
        <Location left="1554" top="349" />
        <Size width="163" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Method">string getKey()</Member>
        <Member type="Method">int getCacheTTL()</Member>
      </Entity>
      <Entity type="Class">
        <Name>MemcachedWrapper</Name>
        <Access>Public</Access>
        <Location left="853" top="617" />
        <Size width="267" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected Memcached memcached</Member>
        <Member type="Field">protected int hits</Member>
        <Member type="Field">protected string uniqid</Member>
        <Member type="Method">public MemcachedWrapper __construct(string uniqid)</Member>
        <Member type="Method">public bool setItem(ICacheable item)</Member>
        <Member type="Method">public ICacheable getItem(string key)</Member>
        <Member type="Method">public bool deleteItem(string key)</Member>
        <Member type="Method">public bool deleteMulti(array keys)</Member>
        <Member type="Method">public void flushCache()</Member>
        <Member type="Method">public int getHits()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>RedisWrapper</Name>
        <Access>Public</Access>
        <Location left="1175" top="617" />
        <Size width="236" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected Redis redis</Member>
        <Member type="Field">protected int hits</Member>
        <Member type="Field">protected string uniqid</Member>
        <Member type="Method">public RedisWrapper __construct(string uniqid)</Member>
        <Member type="Method">public bool setItem(ICacheable item)</Member>
        <Member type="Method">public ICacheable getItem(string key)</Member>
        <Member type="Method">public bool deleteItem(string key)</Member>
        <Member type="Method">public bool deleteMulti(array keys)</Member>
        <Member type="Method">public void flushCache()</Member>
        <Member type="Method">public int getHits()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>EndpointHandler</Name>
        <Access>Public</Access>
        <Location left="31" top="28" />
        <Size width="353" height="689" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected Client client</Member>
        <Member type="Method">public EndpointHandler __construct(Client client)</Member>
        <Member type="Method">public void setClient(Client client)</Member>
        <Member type="Method">public static int parseTrailingIdFromUrl(string url)</Member>
        <Member type="Method">public stdClass verifyAccessToken()</Member>
        <Member type="Method">public stdClass tokenDecode()</Member>
        <Member type="Method">public array getMarketTypes()</Member>
        <Member type="Method">public array getMarketTypeHrefs()</Member>
        <Member type="Method">public array getRegions()</Member>
        <Member type="Method">public stdClass getRegion(int regionId)</Member>
        <Member type="Method">public array getConstellationHrefs()</Member>
        <Member type="Method">public stdClass getConstellation(int constellationId)</Member>
        <Member type="Method">public array getSolarSystemHrefs()</Member>
        <Member type="Method">public stdClass getSolarSystem(int systemId)</Member>
        <Member type="Method">public stdClass getMarketOrders(int typeId, int regionId)</Member>
        <Member type="Method">public void getMultiMarketOrders(array typeIds, int regionId, callable callback, callable errCallback, bool cache)</Member>
        <Member type="Method">public array getMarketHistory(int typeId, int regionId)</Member>
        <Member type="Method">public void getMultiMarketHistory(array typeIds, int regionId, callable callback, callable errCallback, bool cache)</Member>
        <Member type="Method">public array getIndustrySystems()</Member>
        <Member type="Method">public array getMarketPrices()</Member>
        <Member type="Method">public array getIndustryFacilities()</Member>
        <Member type="Method">public array getItemGroups()</Member>
        <Member type="Method">public stdClass getItemGroup(int groupId)</Member>
        <Member type="Method">public array getAlliances()</Member>
        <Member type="Method">public stdClass getAlliance(int allianceId)</Member>
        <Member type="Method">public array getItemTypes()</Member>
        <Member type="Method">public stdClass getType(int typeId)</Member>
        <Member type="Method">public array getItemCategories()</Member>
        <Member type="Method">public stdClass getItemCategory(int categoryId)</Member>
        <Member type="Method">public array getMarketGroups()</Member>
        <Member type="Method">public array getMarketGroupTypes(int marketGroupId)</Member>
        <Member type="Method">public array getTournaments()</Member>
        <Member type="Method">public array getWarHrefs()</Member>
        <Member type="Method">public stdClass getWar(int warId)</Member>
        <Member type="Method">public array getIncursions()</Member>
        <Member type="Method">public stdClass getKillmail(string killmailHref)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CacheableArray</Name>
        <Access>Public</Access>
        <Location left="1505" top="99" />
        <Size width="267" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected string key</Member>
        <Member type="Field">protected int ttl</Member>
        <Member type="Field">public array data</Member>
        <Member type="Method">public CacheableArray __construct(string key, int ttl)</Member>
        <Member type="Method">public string getKey()</Member>
        <Member type="Method">public int getCacheTTL()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Response</Name>
        <Access>Public</Access>
        <Location left="1469" top="528" />
        <Size width="342" height="400" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected string key</Member>
        <Member type="Field">public stdClass content</Member>
        <Member type="Field">protected array header</Member>
        <Member type="Field">protected array info</Member>
        <Member type="Method">public Response __construct(string key)</Member>
        <Member type="Method">public void setContent(string content)</Member>
        <Member type="Method">public void setInfo(array info)</Member>
        <Member type="Method">public int handleCurlHeaderLine(curl_handle curl, string headerLine)</Member>
        <Member type="Method">public string getContentType()</Member>
        <Member type="Method">public int getPageCount()</Member>
        <Member type="Method">public bool hasNextPage()</Member>
        <Member type="Method">public string getNextPageHref()</Member>
        <Member type="Method">public bool hasPreviousPage()</Member>
        <Member type="Method">public string getPreviousPageHref()</Member>
        <Member type="Method">public bool isDeprecated()</Member>
        <Member type="Method">public array getHeader()</Member>
        <Member type="Method">public array getInfo()</Member>
        <Member type="Method">public string getKey()</Member>
        <Member type="Method">public int getCacheTTL()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Exceptions omitted</Text>
        <Location left="567" top="648" />
        <Size width="119" height="50" />
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="0" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="0" second="2">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="1" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Realization" first="5" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="4" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="2" second="3">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Realization" first="7" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="8" second="3">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="6" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>